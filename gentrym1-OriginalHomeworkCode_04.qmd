---
title: "What's Your Malfunction?"
author: "Gentry Miller"
format: html
editor: visual
---

## Preliminaries

```{r}
#| label: Packages and Data

library(curl)
library(manipulate)
library(ggplot2)
d <- curl("https://raw.githubusercontent.com/fuzzyatelin/fuzzyatelin.github.io/refs/heads/master/AN588_Spring25/KamilarAndCooperData.csv")
df <- read.csv(d, header = TRUE, sep = ",", stringsAsFactors = FALSE)
```

## Question 1

```{r}
#| label: Question 1: Z tests

# function Z.prop.test() that takes as parameters:

# p1 and n1, representing the est. proportion and sample size
# p2 and n2 (default = NULL) representing a second sample's proportion and sample size
# p0 as expected value for the pop. proportion
# alternative (default = "two.sided") and conf.level (default = 0.95)

# and returns a list of the test statistic (Z), the p value (P), and the confidence interval (CI) wrt conf.level

Z.prop.test <- function(p1, n1, p2 = NULL, n2 = NULL, p0, alternative = "two.sided", conf.level = 0.95){
  
  # normality check
  is.norm <- function(p, n){
    if (n * p < 5 || n * (1 - p) < 5) {
      warning("Distribution may not be normal: np and n(1-p) should both be > 5")
    }
  }
  
  # one sample
  if(is.null(p2) || is.null(n2)){
    # if p2 or n2 is null there is only one sample to test
    is.norm(p1, n1)
    
    p_hat <- p1
    SE <- sqrt(p0 * (1-p0) / n1)
    Z <- (p_hat - p0) / SE
    CI <- p_hat + c(-1,1) * qnorm(1 - (1 - conf.level) / 2) * SE
  } 
  
  # two samples
  else {
    # if neither p2 nor n2 is null there are two samples to test
    is.norm(p1, n1)
    is.norm(p2, n2)
    
    p_hat1 <- p1
    p_hat2 <- p2
    p_hats <- (p_hat1 * n1 + p_hat2 * n2) / (n1 + n2)
    SE <- sqrt(p_hats * (1 - p_hats) * (1 / n1 + 1 / n2))
    Z <- (p_hat1 - p_hat2) / SE
    CI <- (p_hat1 - p_hat2) + c(-1,1) * qnorm(1 - (1 - conf.level) / 2) * SE
  }
  
  # calculating p-value
  # identifies test type and calculates P value using appropriate formula
  # if invalid test type is passed to "alternative", stop and issue error
  if (alternative == "two.sided"){
    P <- 2 * (1 - pnorm(abs(Z)))
  } else if (alternative == "greater"){
    P <-  1 - pnorm(Z)
  } else if (alternative == "less"){
    P <- pnorm(Z)
  } else{
    stop("ERROR: Invalid test type. Alternative must be set to 'two.sided', 'greater', or 'less'")
  }
  
  return(list(Z = Z, P = P, CI = CI))
}
```

## Question 2

For this exercise, the end aim is to fit a simple linear regression model to predict longevity (`MaxLongevity_m`) measured in months from species’ brain size (`Brain_Size_Species_Mean`) measured in grams. Do the following for both `longevity~brain size` and `log(longevity)~log(brain size)` :

### 2.1

-   Fit the regression model and, using {ggplot2}, produce a scatterplot with the fitted line superimposed upon the data. Append the the fitted model equation to your plot (HINT: use the function `geom_text()`).

```{r}
#| label: Regression Model

# store data for each field in a holder var for easier access
l <- df$MaxLongevity_m
b <- df$Brain_Size_Species_Mean
log.l <- log(l)
log.b <- log(b)

# create the models
m <- lm(data = df, l ~ b)
m.log <- lm(data = df, log.l ~ log.b)

# 
```

### 2.2

-   Identify and interpret the point estimate of the slope (β1), as well as the outcome of the test associated with the hypotheses H0: β1 = 0; HA: β1 ≠ 0. Also, find a 90 percent CI for the slope (β1) parameter.

```{r}

```

### 2.3

-   Using your model, add lines for the 90 percent confidence and prediction interval bands on the plot and add a legend to differentiate between the lines.

```{r}

```

### 2.4

-   Produce a point estimate and associated 90 percent PI for the longevity of a species whose brain weight is 800 gm. Do you trust the model to predict observations accurately for this value of the explanatory variable? Why or why not?

```{r}

```

### 2.4.2

-   Looking at your two models, which do you think is better? Why?

```{r}

```
